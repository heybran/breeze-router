{"version":3,"file":"BreezeRouter.js","sources":["../src/index.js"],"sourcesContent":["// @ts-check\n\n/**\n * Class representing a router.\n */\nexport default class BreezeRouter {\n  /**\n   * Creates a new BreezeRouter instance.\n   * @constructor\n   */\n  constructor() {\n    /**\n     * Object containing all registered routes.\n     * @type {Object.<string, Function>} \n     * @private\n     */\n    this._routes = {};\n\n    /**\n     * The previous route that was navigated to\n     * @type {Object|null}\n     * @private\n     */\n    this._previousRoute = null;\n\n    /**\n     * Flag indicating whether this is the first initial page load.\n     * @type {boolean}\n     * @private\n     */\n    this._isInitialLoad = false;\n\n    // Bind event listeners\n    window.addEventListener('popstate', this._onChanged.bind(this));\n    document.body.addEventListener('click', this._handleClick.bind(this));\n  }\n\n  /**\n   * Initializes the router by triggering the initial navigation event.\n   * @returns {void}\n   */\n  init() {\n    this._onChanged();\n  }\n\n  /**\n   * Adds a new route to the router.\n   * @param {string} route - The route path to add.\n   * @param {Function} handler - The async function to handle the route\n   * @returns {BreezeRouter} The BreezeRouter instance.\n   */\n  add(route, handler) {\n    if (this._routes[route]) {\n      return console.warn(`Route already exists: ${route}`);\n    }\n\n    this._routes[route] = {\n      path: route,\n      handler\n    };\n\n    return this;\n  }\n\n  /**\n   * Navigates to the specified URL.\n   * @param {string} url - The URL to navigate to\n   * @returns {void}\n   */\n  navigateTo(url) {\n    window.history.pushState({url}, '', url);\n    this._onChanged();\n  }\n\n  async _onChanged() {\n    const path = window.location.pathname;\n    const { route, params } = this._matchUrlToRoute(path);\n\n    if (!route) {\n      return;\n    }\n\n    if (typeof route.handler === \"function\" && route.handler.constructor.name.toLowerCase() === \"function\") {\n      route.handler({ route, param });\n    } \n\n    if (typeof route.handler === \"function\" && route.handler.constructor.name.toLowerCase() === \"asyncfunction\") {\n      await route.handler({ route, params });\n    }\n  }\n\n  // @param {string} url\n  _matchUrlToRoute(url) {\n    // params will be storing some information of matched route\n    const params = {};\n\n    // If url ends with \"/\", e.g. \"/project/edit/123/\",\n    // then remove the trailing slash using replace() method with a regular expression.\n    if (url.endsWith('/')) {\n      url = url.replace(/\\/$/, '');\n    }\n\n    // When we visit url: /project/edit/123,\n    // first we need to figure out which route match the url pattern.\n    const matchedRoute = Object.keys(this._routes).find((route) => {\n      // '/dashboard' will not match '/project/edit/123'\n      // as they have different length if we compare them after split with \"/\".\n      if (url.split('/').length !== route.split('/').length) {\n        return false;\n      }\n\n      // '/project/edit/:id' => [ \"project\", \"edit\", \":id\" ]\n      let routeSegments = route.split('/').slice(1);\n      // '/project/edit/123' => [ \"project\", \"edit\", \"123\" ]\n      let urlSegments = url.split('/').slice(1);\n\n      // If each segment in the url matches the corresponding segment in the route path,\n      // or the route path segment starts with a ':' then the route is matched.\n      const match = routeSegments.every((segment, i) => {\n        return segment === urlSegments[i] || segment.startsWith(':');\n      });\n\n      // If the route matches the URL, pull out any params from the URL.\n      if (match) {\n        routeSegments.forEach((segment, i) => {\n          if (segment[0] === ':') {\n            const propName = segment.slice(1);\n            params[propName] = decodeURIComponent(urlSegments[i]);\n          }\n        });\n      }\n\n      return match;\n    });\n\n    return { route: this._routes[matchedRoute], params };\n  }\n\n  _handleClick() {\n    \n  }\n} "],"names":[],"mappings":"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"}