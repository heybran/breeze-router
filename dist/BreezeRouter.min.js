const t=t=>(t.endsWith("/")&&(t=t.replace(/\/$/,"")),t);class e{constructor(){this._routes={},this._previousRoute={},this._isInitialLoad=!1,window.addEventListener("popstate",this._onChanged.bind(this)),document.body.addEventListener("click",this._handleClick.bind(this))}init(){this._onChanged()}add(e,n){return"/"!==(e=e.trim())&&(e=t(e.trim())),this._routes[e]?console.warn(`Route already exists: ${e}`):"function"!=typeof n?console.error(`handler on route '${e}' is not a function.`):(this._routes[e]={path:e,handler:n},this)}navigateTo(t){window.history.pushState({url:t},"",t),this._onChanged()}async _onChanged(){const t=window.location.pathname,{route:e,params:n}=this._matchUrlToRoute(t);e&&("function"===e.handler.constructor.name.toLowerCase()&&e.handler({route:e,params:n}),(t=>"asyncfunction"===t.constructor.name.toLowerCase())(e.handler)&&await e.handler({route:e,params:n}))}_matchUrlToRoute(e){const n={};"/"!==e&&(e=t(e));const o=Object.keys(this._routes).find((t=>{if(e.split("/").length!==t.split("/").length)return!1;let o=t.split("/").slice(1),s=e.split("/").slice(1);return!!o.every(((t,e)=>t===s[e]||t.startsWith(":")))&&(o.forEach(((t,e)=>{if(t.startsWith(":")){const o=t.slice(1);n[o]=decodeURIComponent(s[e])}})),!0)}));return{route:this._routes[o],params:n}}_handleClick(t){}}export{e as default};
//# sourceMappingURL=BreezeRouter.min.js.map
