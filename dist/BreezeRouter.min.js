class t{constructor(){this._routes={},this._previousRoute=null,this._isInitialLoad=!1,window.addEventListener("popstate",this._onChanged.bind(this)),document.body.addEventListener("click",this._handleClick.bind(this))}init(){this._onChanged()}add(t,e){return this._routes[t]?console.warn(`Route already exists: ${t}`):(this._routes[t]={path:t,handler:e},this)}navigateTo(t){window.history.pushState({url:t},"",t),this._onChanged()}async _onChanged(){const t=window.location.pathname,{route:e,params:n}=this._matchUrlToRoute(t);e&&("function"==typeof e.handler&&"function"===e.handler.constructor.name.toLowerCase()&&e.handler({route:e,param:param}),"function"==typeof e.handler&&"asyncfunction"===e.handler.constructor.name.toLowerCase()&&await e.handler({route:e,params:n}))}_matchUrlToRoute(t){const e={};t.endsWith("/")&&(t=t.replace(/\/$/,""));const n=Object.keys(this._routes).find((n=>{if(t.split("/").length!==n.split("/").length)return!1;let o=n.split("/").slice(1),s=t.split("/").slice(1);const a=o.every(((t,e)=>t===s[e]||t.startsWith(":")));return a&&o.forEach(((t,n)=>{if(":"===t[0]){const o=t.slice(1);e[o]=decodeURIComponent(s[n])}})),a}));return{route:this._routes[n],params:e}}_handleClick(){}}export{t as default};
//# sourceMappingURL=BreezeRouter.min.js.map
